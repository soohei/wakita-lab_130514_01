// Generated by CoffeeScript 1.4.0
(function() {
  var Spring;

  Spring = (function() {

    function Spring(ctx, node0, node1, restLength, color) {
      if (restLength == null) {
        restLength = 100;
      }
      if (color == null) {
        color = '#ffffff';
      }
      this.ctx = ctx;
      this.nd0 = node0;
      this.nd1 = node1;
      this.restLength = restLength;
      this.color = color;
      this.damping = 0.85;
      this.minLength = 1;
      this.init();
    }

    Spring.prototype.init = function() {
      return this.drawLine();
    };

    Spring.prototype.update = function() {
      var dist, dx, dy, f, fx, fy;
      dx = this.nd1.x - this.nd0.x;
      dy = this.nd1.y - this.nd0.y;
      dist = Math.sqrt(dx * dx + dy * dy);
      if (dist < this.minLength) {
        return;
      }
      f = this.damping * (this.restLength - dist) / dist;
      fx = dx * f * 0.5;
      fy = dy * f * 0.5;
      this.nd0.fx -= fx;
      this.nd0.fy -= fy;
      this.nd1.fx += fx;
      return this.nd1.fy += fy;
    };

    Spring.prototype.rendar = function() {
      return this.drawLine();
    };

    Spring.prototype.getLength = function() {
      var num;
      num = Math.sqrt(Math.pow(this.nd0.x - this.nd1.x, 2) + Math.pow(this.nd0.y - this.nd1.y, 2));
      return num;
    };

    Spring.prototype.drawLine = function() {
      this.ctx.strokeStyle = this.color;
      this.ctx.beginPath();
      this.ctx.moveTo(this.nd0.x, this.nd0.y);
      this.ctx.lineTo(this.nd1.x, this.nd1.y);
      this.ctx.closePath();
      return this.ctx.stroke();
    };

    return Spring;

  })();

  if (!window.soda) {
    window.soda = {};
  }

  window.soda.Spring = Spring;

}).call(this);
